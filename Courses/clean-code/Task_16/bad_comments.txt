1.
Before:
/*
if (x == 1920 / 2 and y == 1080 / 2){
    SDL_SetRenderDrawColor(renderer, 255, 255, 255, 255);
    SDL_RenderDrawPoint(renderer, x, y);
    break;
}
*/


Пункт: 11
Удалил закомментированный код.

2.
Before:
// Позиция камеры.
position = scene.camera.position

After:
position = scene.camera.position

Пункт: 4
Удалил "шум".

3.
Before:
//Handle events
sf::Event event;
while (window->pollEvent(event)){
    if (event.type == sf::Event::Closed){
        window->close();
    }
}

After:
this->handle_events();

Пункт: 12
Вынес код в функцию и удалил комментарий.

4.
Before:
// c это гравитационная постоянная.
const double c = 0.006;
float f = (b1->GetMass() * b2->GetMass() / (dist*dist)) * c;

After:
const double gravitational_constant = 0.006;
float f = (b1->GetMass() * b2->GetMass() / (dist*dist)) * gravitational_constant;

Пункт: 12
Переименновал переменную и удалил комментарий.

5.
Before:
// Вызывается фиксированное число раз в секунду, необходим для реализации физики.
void Program::FixedUpdate() {...}

After:
void Program::FixedUpdate() {...}

Пункт: 9
Удалил комментарий с нелокальной информацией.

6.
Before:
# Game.pool.join()
# print("Calculated")

Пункт: 11
Удалил закомментированный код.

7.
Before:
// k это количество итераций цикла.
k = 0

After:
steps_num = 0

Пункт: 12
// Переименовал переменную и удалил комментарий

8.
Before:
// Проверка на нулевой указатель.
if (window == nullptr) {
    printf("Unable to create Window %s\n", SDL_GetError());
    SDL_Quit();
    return 1;
}

After:
if (window == nullptr) {
    printf("Unable to create Window %s\n", SDL_GetError());
    SDL_Quit();
    return 1;
}

Пункт: 4
Удалил "шум".

9.
Before:
//Измеряется в нанносекундах.
long fps_update_period = 1000 * 1000 / 4;

After:
long fps_update_period_nanoseconds = 1000 * 1000 / 4;

Пункт:12
Переименовал переменную и удалил комментарий.

10.
Before:
//Update
this->Update();

After:
this->Update();

Пункт: 4
Удалил "шум".

11.
Before:
# self.scene.add_sphere(Vector3(0, 9, 0), 2)
# self.scene.add_sphere(Vector3(4, 7, 0), 2)

Пункт: 11
Удалил закомментированный код.

12.
Before:
// Сравнение числа с плавающей точкой с нулём может быть не корректно, поэтому проверяется на, то что оно меньше, чем другое маленькое число.
if min_dist < 0.01:

After:
if min_dist < 0.01:

Пункт: 7
Удалил избыточный комментарий.

13.
Before:
# self.scene.add_sphere(Vector3(0, 9, 0), 2)
# self.scene.add_sphere(Vector3(4, 7, 0), 2)

Пункт: 11
Удалил закомментированный код.

14.
Before:
canvas->DrawScene(scene, window);
// Метод display надо вызвать сразу, после отрисовки сцены, иначе возможны графические артефакты.
window->display();

After:
canvas->DrawScene(scene, window);
window->display();

Пункт: 3
Удалил комментарий, потому что информация не актуальна.

15.
Before:
// В деструкторе нужно удалить, все связанные объекты
delete canvas;
delete physics_director;
delete window;
delete scene;

After:
delete canvas;
delete physics_director;
delete window;
delete scene;

Пункт: 4
Удалил "шум"
